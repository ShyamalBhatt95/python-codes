{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h1 style='color:red'>Loops in Python</h1>\n",
    "<ol>\n",
    "    <li>for</li>\n",
    "    <li>while</li>\n",
    "    </ol>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello world Times 1\n",
      "Hello world Times 2\n",
      "Hello world Times 3\n",
      "Hello world Times 4\n",
      "Hello world Times 5\n",
      "Hello world Times 6\n",
      "Hello world Times 7\n",
      "Hello world Times 8\n",
      "Hello world Times 9\n",
      "Hello world Times 10\n"
     ]
    }
   ],
   "source": [
    "c = 1\n",
    "while c <= 10 : \n",
    "    print(f\"Hello world Times {c}\")\n",
    "    c = c + 1\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter starting Point : 10\n",
      "Enter ending Point : 25\n",
      "10\n",
      "11\n",
      "12\n",
      "13\n",
      "14\n",
      "15\n",
      "16\n",
      "17\n",
      "18\n",
      "19\n",
      "20\n",
      "21\n",
      "22\n",
      "23\n",
      "24\n",
      "25\n"
     ]
    }
   ],
   "source": [
    "start = int(input(\"Enter starting Point : \"))\n",
    "end = int(input(\"Enter ending Point : \"))\n",
    "if start <= end : \n",
    "    counter = start \n",
    "    while counter <= end : \n",
    "        print(counter)\n",
    "        counter = counter + 1\n",
    "else : \n",
    "    print(\"Start should be less than end\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
